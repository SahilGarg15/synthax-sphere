import type { BlogArticle } from '@/types';

export const mockBlogArticles: BlogArticle[] = [
  {
    id: 'article-1',
    title: 'The Future of Web Development in 2025',
    excerpt: 'Explore the top trends shaping web development including WebAssembly, edge computing, and modern frameworks.',
    content: 'As we move into 2025, web development continues to evolve at a rapid pace. Modern frameworks like React, Vue, and Svelte are pushing the boundaries of what\'s possible in the browser. Server-side rendering and static site generation have become the norm, offering incredible performance benefits. The rise of Web Assembly is enabling near-native performance for complex applications. Edge computing is revolutionizing how we think about deploying and scaling applications. In this article, we\'ll explore the top trends shaping the future of web development and what you need to know to stay ahead.',
    authorId: 'mentor-1',
    authorName: 'Prof. Michael Roberts',
    authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Michael',
    thumbnail: 'https://images.unsplash.com/photo-1498050108023-c5249f4df085?w=800',
    tags: ['Web Development', 'React', 'Future Tech', 'Trends'],
    reactions: {
      like: 245,
      love: 89,
      insightful: 156,
    },
    comments: [
      {
        id: 'comment-1',
        authorId: 'user-1',
        authorName: 'Sahil Garg',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Sahil',
        content: 'Great insights! Really excited about the future of WebAssembly.',
        createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: 'comment-2',
        authorId: 'mentor-2',
        authorName: 'Dr. Emily Chen',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Emily',
        content: 'Edge computing is definitely game-changing. We\'re already implementing it in production.',
        createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
      },
    ],
    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    readTime: '8 min read',
  },
  {
    id: 'article-2',
    title: 'Mastering Async/Await: A Deep Dive',
    excerpt: 'A comprehensive guide to asynchronous programming in JavaScript from Promise fundamentals to advanced patterns.',
    content: 'Asynchronous programming is at the heart of modern JavaScript development. Understanding async/await is crucial for building performant applications. This comprehensive guide covers everything from Promise fundamentals to advanced patterns like parallel execution, error handling, and race conditions. We\'ll explore real-world examples including API calls, database operations, and file handling. Learn how to avoid common pitfalls like unhandled promise rejections and how to effectively debug asynchronous code. By the end of this article, you\'ll have mastered one of JavaScript\'s most powerful features.',
    authorId: 'mentor-3',
    authorName: 'Sarah Thompson',
    authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Sarah',
    thumbnail: 'https://images.unsplash.com/photo-1516116216624-53e697fedbea?w=800',
    tags: ['JavaScript', 'Async', 'Programming', 'Tutorial'],
    reactions: {
      like: 189,
      love: 67,
      insightful: 234,
    },
    comments: [
      {
        id: 'comment-3',
        authorId: 'user-2',
        authorName: 'Alex Kumar',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Alex',
        content: 'This cleared up so many confusions I had! Thank you!',
        createdAt: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
      },
    ],
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    readTime: '12 min read',
  },
  {
    id: 'article-3',
    title: 'Building Scalable APIs with Node.js',
    excerpt: 'Best practices for designing RESTful APIs that can handle millions of requests with Node.js.',
    content: 'Node.js has become the go-to platform for building scalable backend services. In this article, we\'ll explore best practices for designing and implementing RESTful APIs that can handle millions of requests. Topics include proper routing architecture, middleware patterns, authentication and authorization, rate limiting, caching strategies, and database optimization. We\'ll also cover monitoring and logging, error handling, and deployment strategies. Whether you\'re building a startup MVP or an enterprise system, these principles will help you create robust, maintainable APIs.',
    authorId: 'mentor-1',
    authorName: 'Prof. Michael Roberts',
    authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Michael',
    thumbnail: 'https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=800',
    tags: ['Node.js', 'Backend', 'API', 'Scalability'],
    reactions: {
      like: 312,
      love: 98,
      insightful: 201,
    },
    comments: [
      {
        id: 'comment-4',
        authorId: 'user-3',
        authorName: 'Jessica Lee',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Jessica',
        content: 'The section on caching strategies was particularly helpful!',
        createdAt: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: 'comment-5',
        authorId: 'user-1',
        authorName: 'Sahil Garg',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Sahil',
        content: 'Can you do a follow-up on GraphQL APIs?',
        createdAt: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: 'comment-6',
        authorId: 'mentor-1',
        authorName: 'Prof. Michael Roberts',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Michael',
        content: 'Great suggestion! I\'ll add that to the pipeline.',
        createdAt: new Date(Date.now() - 7 * 60 * 60 * 1000).toISOString(),
      },
    ],
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    readTime: '10 min read',
  },
  {
    id: 'article-4',
    title: 'Python Data Science: From Zero to Hero',
    excerpt: 'Complete guide from basic Python syntax to advanced data analysis with NumPy, Pandas, and Scikit-learn.',
    content: 'Python has become the dominant language in data science and machine learning. This comprehensive guide takes you from basic Python syntax to advanced data analysis techniques. Learn how to work with NumPy for numerical computing, Pandas for data manipulation, Matplotlib and Seaborn for visualization, and Scikit-learn for machine learning. We\'ll work through real-world datasets, exploring data cleaning, feature engineering, statistical analysis, and model building. Perfect for beginners looking to break into data science or experienced developers wanting to expand their skillset.',
    authorId: 'mentor-2',
    authorName: 'Dr. Emily Chen',
    authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Emily',
    thumbnail: 'https://images.unsplash.com/photo-1526374965328-7f61d4dc18c5?w=800',
    tags: ['Python', 'Data Science', 'Machine Learning', 'Tutorial'],
    reactions: {
      like: 428,
      love: 156,
      insightful: 289,
    },
    comments: [
      {
        id: 'comment-7',
        authorId: 'user-2',
        authorName: 'Alex Kumar',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Alex',
        content: 'Best Python DS tutorial I\'ve found! Very practical.',
        createdAt: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: 'comment-8',
        authorId: 'user-4',
        authorName: 'David Martinez',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=David',
        content: 'The visualization section was excellent!',
        createdAt: new Date(Date.now() - 8 * 60 * 60 * 1000).toISOString(),
      },
    ],
    createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),
    readTime: '15 min read',
  },
  {
    id: 'article-5',
    title: 'CSS Grid vs Flexbox: When to Use Each',
    excerpt: 'Master modern CSS layouts by understanding when to use Grid for 2D layouts and Flexbox for 1D layouts.',
    content: 'CSS Grid and Flexbox are two powerful layout systems that have revolutionized web design. But when should you use each? This article breaks down the strengths and use cases of both. Flexbox excels at one-dimensional layouts, perfect for navigation bars, card layouts, and centering content. CSS Grid shines in two-dimensional layouts, ideal for complex page structures and magazine-style designs. We\'ll explore practical examples, common patterns, and how to combine both for maximum flexibility. Includes interactive demos and code snippets you can use in your projects immediately.',
    authorId: 'mentor-3',
    authorName: 'Sarah Thompson',
    authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Sarah',
    thumbnail: 'https://images.unsplash.com/photo-1507721999472-8ed4421c4af2?w=800',
    tags: ['CSS', 'Web Design', 'Layout', 'Frontend'],
    reactions: {
      like: 267,
      love: 89,
      insightful: 178,
    },
    comments: [
      {
        id: 'comment-9',
        authorId: 'user-1',
        authorName: 'Sahil Garg',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Sahil',
        content: 'Finally understand when to use Grid vs Flexbox!',
        createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
      },
    ],
    createdAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000).toISOString(),
    readTime: '7 min read',
  },
  {
    id: 'article-6',
    title: 'TypeScript Best Practices for Large Codebases',
    excerpt: 'Battle-tested patterns for structuring types, using generics, and maintaining type safety in enterprise applications.',
    content: 'TypeScript has become essential for maintaining large-scale JavaScript applications. This article covers battle-tested best practices from real-world projects. Learn how to structure your types effectively, use generics for reusable code, leverage utility types, and implement proper error handling. We\'ll discuss configuration options, strict mode benefits, and how to gradually migrate JavaScript projects. Topics include module organization, type guards, discriminated unions, and advanced patterns like dependency injection. These practices will help you write more maintainable, bug-free code.',
    authorId: 'mentor-1',
    authorName: 'Prof. Michael Roberts',
    authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Michael',
    thumbnail: 'https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=800',
    tags: ['TypeScript', 'Best Practices', 'Software Engineering'],
    reactions: {
      like: 356,
      love: 123,
      insightful: 267,
    },
    comments: [
      {
        id: 'comment-10',
        authorId: 'user-3',
        authorName: 'Jessica Lee',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=Jessica',
        content: 'The generics section saved me hours of debugging!',
        createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: 'comment-11',
        authorId: 'user-4',
        authorName: 'David Martinez',
        authorAvatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=David',
        content: 'Would love to see more on advanced types!',
        createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),
      },
    ],
    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    readTime: '11 min read',
  },
];
